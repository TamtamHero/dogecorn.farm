{"version":3,"sources":["logo.svg","StakeCard/index.js","LaunchPad/index.js","StatusBar/index.js","AppExplanations/index.js","controller/accountManager.js","poolConfigs.js","App.js","reportWebVitals.js","index.js"],"names":["StakeCard","pool","useState","balance","setBalance","useEffect","console","log","className","incentive","title","description","Launchpad","pools","activeTab","setActiveTab","onClick","earn","map","farm","rainbow","StatusBar","color","account","isLoading","setLoading","accountAddr","setAccountAddr","onTriggerRun","useCallback","then","slice","disabled","style","margin","backgroundColor","AppExplanations","expandedItems","setexpandedItems","allowZeroExpanded","allowMultipleExpanded","onChange","update","length","newExpandedItemUUID","itemButtonBottom","document","getElementById","getBoundingClientRect","bottom","window","innerHeight","scrollBy","children","AccountManager","this","connected","busy","web3Provider","web3","network","accounts","dogecorn","a","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","theme","zIndex","connect","request","method","params","error","Web3","eth","net","getId","deployedNetwork","Dogecorn","networks","Contract","abi","address","getBalances","value","contract","methods","set","send","from","Promise","all","getTokenBalance","tokenAddress","formatted","getBalance","String","formatted_balance","getFormattedBalance","IERC20","balanceOf","call","ticker","decimals","balance_BN","utils","toBN","decimals_BN","before_comma","div","toString","after_comma","mod","padStart","token","config","configuration","accountManager","App","setAccount","hideProgressBar","position","getMaticBalance","toast","src","logo","alt","href","target","rel","packageJson","version","h","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"25tGAAe,MAA0B,iC,yCC0B1BA,MAvBf,YAA8B,IAATC,EAAQ,EAARA,KACnB,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,qBAAU,WACRD,EAAWH,EAAKE,SAChBG,QAAQC,IAAIN,EAAKE,WAChB,CAACF,EAAKE,UAGP,qBACEK,UACEP,EAAKQ,UAAY,uBAAyB,sBAF9C,SAKE,sBAAKD,UAAU,OAAf,UACE,qBAAKA,UAAW,QAAhB,SAA0BP,EAAKS,QAC/B,qBAAKF,UAAW,cAAhB,SAAgCP,EAAKU,cACrC,qBAAKH,UAAW,UAAhB,SAA4BL,UCiCrBS,MAjDf,YAA+B,IAAVC,EAAS,EAATA,MACnB,EAAkCX,mBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKP,UAAU,aAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBACEQ,QAAS,kBAAMD,EAAa,IAC5BP,UAAS,cAAuB,IAAdM,EAAkB,SAAW,IAFjD,SAIG,SAEH,qBACEE,QAAS,kBAAMD,EAAa,IAC5BP,UAAS,cAAuB,IAAdM,EAAkB,SAAW,IAFjD,SAIG,YAGU,IAAdA,EACC,qBAAKN,UAAU,MAAf,SACE,8BACE,qBAAKA,UAAU,aAAf,SACGK,EAAMI,KAAKC,KAAI,SAACjB,GAAD,OACd,cAAC,EAAD,CAA4BA,KAAMA,GAAlBA,EAAKS,gBAM7B,qBAAKF,UAAU,MAAf,SACE,8BACE,qBAAKA,UAAU,aAAf,SACGK,EAAMM,KAAKD,KAAI,SAACjB,GAAD,OACd,cAAC,EAAD,CAEES,MAAOT,EAAKS,MACZC,YAAaV,EAAKU,YAClBS,QAASnB,EAAKQ,WAHTR,EAAKS,oB,OCFbW,MAlCf,YAA0D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAAkBP,GAAW,EAApBb,QAAoB,EAAXa,SAC5C,EAAgCd,oBAAS,GAAzC,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAAsCvB,mBAAS,IAA/C,mBAAOwB,EAAP,KAAoBC,EAApB,KAEMC,EAAeC,uBAAY,WACf,kBAAZN,IACFE,GAAW,GACXT,IAAUc,MAAK,WACbL,GAAW,SAGd,CAACT,EAASO,IAQb,OANAlB,qBAAU,WACQ,kBAAZkB,GACFI,EAAeJ,EAAQ,GAAGQ,MAAM,EAAG,GAAK,SAEzC,CAACR,IAGF,wBACEf,UAAU,gBACVwB,SAAUR,EAA6B,KAAhBE,EACvBV,QAASQ,EAAY,KAAOI,EAC5BK,MAAO,CACLC,OAAQ,OACRC,gBAAiBb,GANrB,SASGI,IAA4BF,EAAY,gBAAa,qB,iCCpB7C,SAASY,IACtB,MAA0ClC,mBAAS,IAAnD,mBAAOmC,EAAP,KAAsBC,EAAtB,KAqBA,OACE,cAAC,IAAD,CAAWC,mBAAiB,EAACC,uBAAqB,EAACC,SAnBrD,SAAsBC,GACpB,GAAIA,EAAOC,OAASN,EAAcM,OAAQ,CACxC,IAAMC,EAAsBF,EAAOA,EAAOC,OAAS,GAC7CE,EAAmBC,SACtBC,eADsB,2BACaH,IACnCI,wBAAwBC,OACvBJ,EAAmBK,OAAOC,aAC5BD,OAAOE,SAAS,EAAGP,EAAmBK,OAAOC,aAGjDb,EAAiBI,IASjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,4BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACElC,UAAU,eACV6C,SAZR,6B,2HCiFWC,E,WAvGb,WAAYzC,GAAQ,oBAClB0C,KAAKC,WAAY,EACjBD,KAAKE,MAAO,EACZF,KAAKG,aAAe,KACpBH,KAAKI,KAAO,KACZJ,KAAKpD,QAAU,EACfoD,KAAKK,QAAU,EACfL,KAAKM,SAAW,KAChBN,KAAKO,SAAW,KAChBP,KAAK1C,MAAQA,E,kFAGf,gCAAAkD,EAAA,yDACOR,KAAKC,UADZ,wBAEUQ,EAAkB,CACtBC,cAAe,CACbC,QAASC,IACTC,QAAS,CACPC,SAAU,eAKVC,EAAY,IAAIC,IAAU,CAC9BX,QAAS,UACTY,eAAe,EACfR,kBACAS,MAAO,CACLC,OAAQ,OAhBhB,SAoB8BJ,EAAUK,UApBxC,cAoBIpB,KAAKG,aApBT,yBAuB4BH,KAAKG,aAAakB,QAAQ,CAC9CC,OAAQ,sBACRC,OAAQ,KAzBhB,OAuBMvB,KAAKM,SAvBX,yDA6BMvD,QAAQyE,MAAR,6CA7BN,eA+BIxB,KAAKI,KAAO,IAAIqB,IAAKzB,KAAKG,cA/B9B,UAgCyBH,KAAKI,KAAKsB,IAAIC,IAAIC,QAhC3C,WAgCI5B,KAAKK,QAhCT,OAfoB,QAgDZL,KAAKK,QAjCb,wBAkCML,KAAKC,WAAY,EACjBlD,QAAQC,IAAR,qBAA0BgD,KAAKM,SAA/B,mBAAkDN,KAAKM,WAGjDuB,EAAkBC,EAASC,SAAS/B,KAAKK,SAC/CL,KAAKO,SAAW,IAAIP,KAAKI,KAAKsB,IAAIM,SAChCF,EAASG,IACTJ,GAAmBA,EAAgBK,SAzC3C,UA2CYlC,KAAKmC,cA3CjB,eA4CMpF,QAAQC,IAAIgD,KAAK1C,OA5CvB,kBA6Ca0C,KAAKM,UA7ClB,0D,sHAkDA,WAAkB8B,GAAlB,SAAA5B,EAAA,sEACQR,KAAKqC,SAASC,QAAQC,IAAIH,GAAOI,KAAK,CAAEC,KAAMzC,KAAKM,SAAS,KADpE,iCAES,GAFT,gD,uHAKA,iCAAAE,EAAA,sEAC0BkC,QAAQC,IAC9B3C,KAAK1C,MAAMI,KAAKC,IAAhB,uCAAoB,WAAOjB,GAAP,SAAA8D,EAAA,0FACf9D,GADe,iBAEH,EAAKkG,gBAAgBlG,EAAKmG,cAFvB,gCAElBjG,QAFkB,6FAApB,kCAAAoD,KAAA,iBAFJ,OACEA,KAAK1C,MAAMI,KADb,uD,0HASA,wCAAA8C,EAAA,6DAAsBsC,IAAtB,0CACuB9C,KAAKI,KAAKsB,IAAIqB,WAAWC,OAAOhD,KAAKM,WAD5D,cACEN,KAAKpD,QADP,OAEEoD,KAAKiD,kBAAoBjD,KAAKkD,oBAAoBlD,KAAKpD,QAAS,SAFlE,kBAGSkG,EAAY9C,KAAKiD,kBAAoBjD,KAAKpD,SAHnD,gD,0HAMA,WAAsBsF,GAAtB,+BAAA1B,EAAA,6DAA+BsC,IAA/B,iCACMT,EAAW,IAAIrC,KAAKI,KAAKsB,IAAIM,SAASmB,EAAOlB,IAAKC,GADxD,SAEsBG,EAASC,QAC1Bc,UAAUJ,OAAOhD,KAAKM,WACtB+C,OAJL,cAEMzG,EAFN,yBAKSkG,EAAY9C,KAAKkD,oBAAoBtG,EAAS,IAAMA,GAL7D,gD,wFAQA,SAAoBA,EAAS0G,GAAwB,IAAhBC,EAAe,uDAAJ,GAC1CC,EAAaxD,KAAKI,KAAKqD,MAAMC,KAAK9G,GAClC+G,EAAc3D,KAAKI,KAAKqD,MAAMC,KAAhB,SAAqB,GAAMH,IACzCK,EAAeJ,EAAWK,IAAIF,GAAaG,WAC3CC,EAAcP,EAAWQ,IAAIL,GAAaG,WAG9C,OACEF,EAAe,KAHjBG,EAAcA,EAAYE,SAASV,EAAU,OAGPD,EAAOlE,OAAS,IAAMkE,EAAS,Q,kDC3GzE,IAmBehG,EAnBD,CACZI,KAAM,CACJ,CACEP,MAAO,mBACPC,YAAa,oBACb8G,MAAO,iBACPrB,aAAc,6CACd3F,UAAW,QAEb,CACEC,MAAO,UACPC,YAAa,iBACb8G,MAAO,WACPrB,aAAc,+CAGlBjF,KAAM,ICDRuG,IAAO5B,IAAI6B,GAEX,IAAMC,EAAiB,IAAItE,EAAezC,GAwE3BgH,MAtEf,WACE,MAA8B3H,mBAAS,iBAAvC,mBAAOqB,EAAP,KAAgBuG,EAAhB,KACA,EAA8B5H,mBAAS,GAAvC,mBAAgBE,GAAhB,WACA,EAAsCF,mBAAS,GAA/C,mBAEA,OAFA,UAGE,sBAAKM,UAAU,MAAf,UACE,cAAC,IAAD,CAAgBuH,iBAAiB,EAAMC,SAAS,aAIhD,qBAAKxH,UAAU,iBAAf,SACE,cAAC,EAAD,CACEc,MAAM,UACNC,QAASA,EACTP,QAAS,kBACP4G,EAAejD,UAAU7C,MAAK,SAACP,GACxBA,GAKHuG,EAAWvG,GACXqG,EAAeK,kBAAkBnG,MAAK,SAAC3B,GACrCC,EAAWD,OANb+H,IAAMnD,MAAN,oEAaV,sBAAKvE,UAAU,aAAf,UACE,qBAAK2H,IAAKC,EAAM5H,UAAU,WAAW6H,IAAI,SACzC,mBAAG7H,UAAU,YAAb,8BAEF,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAWK,MAAO+G,EAAe/G,QACjC,cAAC,EAAD,IACA,sBAAKL,UAAU,aAAf,UACE,0DAC4B,IAC1B,mBACE8H,KAAK,gCACLC,OAAO,SACPC,IAAI,sBAHN,wBAMK,IARP,4CASqCC,EAAYC,SATjD,IAS6D,IAC3D,mBAAGJ,KAAK,+CAAR,oDAIF,2DAC6B,IAC3B,mBACEK,GAAC,EACDL,KAAK,0GACLC,OAAO,SACPC,IAAI,sBAJN,qEC9DGI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhH,MAAK,YAAkD,IAA/CiH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxG,SAASC,eAAe,SAM1B6F,M","file":"static/js/main.398d4b0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.57d8ffc7.svg\";","import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nfunction StakeCard({ pool }) {\n  const [balance, setBalance] = useState(0);\n\n  useEffect(() => {\n    setBalance(pool.balance);\n    console.log(pool.balance);\n  }, [pool.balance]);\n\n  return (\n    <div\n      className={\n        pool.incentive ? \"card-border--rainbow\" : \"card-border--normal\"\n      }\n    >\n      <div className=\"card\">\n        <div className={\"title\"}>{pool.title}</div>\n        <div className={\"description\"}>{pool.description}</div>\n        <div className={\"balance\"}>{balance}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default StakeCard;\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport StakeCard from \"../StakeCard\";\n\nfunction Launchpad({ pools }) {\n  const [activeTab, setActiveTab] = useState(0);\n\n  return (\n    <div className=\"PadWrapper\">\n      <div className=\"tabs\">\n        <div\n          onClick={() => setActiveTab(0)}\n          className={`tab ${activeTab === 0 ? \"active\" : \"\"}`}\n        >\n          {\"EARN\"}\n        </div>\n        <div\n          onClick={() => setActiveTab(1)}\n          className={`tab ${activeTab === 1 ? \"active\" : \"\"}`}\n        >\n          {\"FARM\"}\n        </div>\n      </div>\n      {activeTab === 0 ? (\n        <div className=\"Pad\">\n          <div>\n            <div className=\"cardholder\">\n              {pools.earn.map((pool) => (\n                <StakeCard key={pool.title} pool={pool}></StakeCard>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"Pad\">\n          <div>\n            <div className=\"cardholder\">\n              {pools.farm.map((pool) => (\n                <StakeCard\n                  key={pool.title}\n                  title={pool.title}\n                  description={pool.description}\n                  rainbow={pool.incentive}\n                ></StakeCard>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Launchpad;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./index.css\";\n\nfunction StatusBar({ color, account, balance, onClick }) {\n  const [isLoading, setLoading] = useState(false);\n  const [accountAddr, setAccountAddr] = useState(\"\");\n\n  const onTriggerRun = useCallback(() => {\n    if (account === \"Not connected\") {\n      setLoading(true);\n      onClick().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [onClick, account]);\n\n  useEffect(() => {\n    if (account !== \"Not connected\") {\n      setAccountAddr(account[0].slice(0, 8) + \"...\");\n    }\n  }, [account]);\n\n  return (\n    <button\n      className=\"ConnectButton\"\n      disabled={isLoading | (accountAddr !== \"\")}\n      onClick={isLoading ? null : onTriggerRun}\n      style={{\n        margin: \"10px\",\n        backgroundColor: color,\n      }}\n    >\n      {accountAddr ? accountAddr : isLoading ? \"Loading…\" : \"Connect wallet\"}\n    </button>\n  );\n}\n\nexport default StatusBar;\n","import React, { useState } from \"react\";\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./index.css\";\n\nexport default function AppExplanations() {\n  const [expandedItems, setexpandedItems] = useState([]);\n\n  // In case the user expands a node that is barely visible, we scroll the page to display it fully\n  function handleExpand(update) {\n    if (update.length > expandedItems.length) {\n      const newExpandedItemUUID = update[update.length - 1];\n      const itemButtonBottom = document\n        .getElementById(`accordion__panel-${newExpandedItemUUID}`)\n        .getBoundingClientRect().bottom;\n      if (itemButtonBottom > window.innerHeight) {\n        window.scrollBy(0, itemButtonBottom - window.innerHeight);\n      }\n    }\n    setexpandedItems(update);\n  }\n\n  const lorem_help =\n    // eslint-disable-next-line\n    \"Lorem \\n\\\n    Ipsum\";\n\n  return (\n    <Accordion allowZeroExpanded allowMultipleExpanded onChange={handleExpand}>\n      <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>Lorem ipsum</AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={lorem_help}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","import Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Dogecorn from \"../contracts/Dogecorn.json\";\nimport IERC20 from \"../contracts/IERC20.json\";\n\nconst MATIC_NETWORK = 80001;\n\nclass AccountManager {\n  constructor(pools) {\n    this.connected = false;\n    this.busy = false;\n    this.web3Provider = null;\n    this.web3 = null;\n    this.balance = 0;\n    this.network = 0;\n    this.accounts = null;\n    this.dogecorn = null;\n    this.pools = pools;\n  }\n\n  async connect() {\n    if (!this.connected) {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider, // required\n          options: {\n            infuraId: \"INFURA_ID\", // required\n          },\n        },\n      };\n\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: true, // optional\n        providerOptions, // required\n        theme: {\n          zIndex: 999,\n        },\n      });\n\n      this.web3Provider = await web3Modal.connect();\n      try {\n        // Request account access\n        this.accounts = await this.web3Provider.request({\n          method: \"eth_requestAccounts\",\n          params: [],\n        });\n      } catch (error) {\n        // User denied account access...\n        console.error(`User denied account access: ${error}`);\n      }\n      this.web3 = new Web3(this.web3Provider);\n      this.network = await this.web3.eth.net.getId();\n      if (this.network === MATIC_NETWORK) {\n        this.connected = true;\n        console.log(`connected: ${this.accounts} ${typeof this.accounts}`);\n\n        // Get the contract instance.\n        const deployedNetwork = Dogecorn.networks[this.network];\n        this.dogecorn = new this.web3.eth.Contract(\n          Dogecorn.abi,\n          deployedNetwork && deployedNetwork.address\n        );\n        await this.getBalances();\n        console.log(this.pools);\n        return this.accounts;\n      }\n    }\n  }\n\n  async useContract(value) {\n    await this.contract.methods.set(value).send({ from: this.accounts[0] });\n    return true;\n  }\n\n  async getBalances() {\n    this.pools.earn = await Promise.all(\n      this.pools.earn.map(async (pool) => ({\n        ...pool,\n        balance: await this.getTokenBalance(pool.tokenAddress),\n      }))\n    );\n  }\n\n  async getMaticBalance(formatted = true) {\n    this.balance = await this.web3.eth.getBalance(String(this.accounts));\n    this.formatted_balance = this.getFormattedBalance(this.balance, \"MATIC\");\n    return formatted ? this.formatted_balance : this.balance;\n  }\n\n  async getTokenBalance(address, formatted = true) {\n    let contract = new this.web3.eth.Contract(IERC20.abi, address);\n    let balance = await contract.methods\n      .balanceOf(String(this.accounts))\n      .call();\n    return formatted ? this.getFormattedBalance(balance, \"\") : balance;\n  }\n\n  getFormattedBalance(balance, ticker, decimals = 18) {\n    let balance_BN = this.web3.utils.toBN(balance);\n    let decimals_BN = this.web3.utils.toBN(10 ** decimals);\n    let before_comma = balance_BN.div(decimals_BN).toString();\n    let after_comma = balance_BN.mod(decimals_BN).toString();\n    after_comma = after_comma.padStart(decimals, \"0\");\n\n    return (\n      before_comma + \".\" + after_comma + (ticker.length ? \" \" + ticker : \"\")\n    );\n  }\n}\n\nexport default AccountManager;\n","const pools = {\n  earn: [\n    {\n      title: \"LIQUIDITY MINING\",\n      description: \"DOGECORN-MATIC LP\",\n      token: \"DOGECORN-MATIC\",\n      tokenAddress: \"0x7bC80c08D45F0C88e42912C55D5377D4968F8EFA\",\n      incentive: \"true\",\n    },\n    {\n      title: \"STAKING\",\n      description: \"STAKE DOGECORN\",\n      token: \"DOGECORN\",\n      tokenAddress: \"0x7bC80c08D45F0C88e42912C55D5377D4968F8EFA\",\n    },\n  ],\n  farm: [],\n};\n\nexport default pools;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport packageJson from \"../package.json\";\nimport Launchpad from \"./LaunchPad\";\nimport StatusBar from \"./StatusBar\";\nimport AppExplanations from \"./AppExplanations\";\nimport AccountManager from \"./controller/accountManager\";\nimport React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport config from \"react-global-configuration\";\nimport configuration from \"./config.json\";\nimport AnimatedWave from \"./AnimatedWave.js\";\nimport pools from \"./poolConfigs.js\";\n\nconfig.set(configuration);\n\nconst accountManager = new AccountManager(pools);\n\nfunction App() {\n  const [account, setAccount] = useState(\"Not connected\");\n  const [balance, setBalance] = useState(0);\n  const [dogeBalance, setDogeBalance] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <ToastContainer hideProgressBar={true} position=\"top-left\" />\n      {/* <div className=\"wave\">\n        <AnimatedWave height={1000} color=\"#824834\" />\n      </div> */}\n      <div className=\"Connect-button\">\n        <StatusBar\n          color=\"#8248e5\"\n          account={account}\n          onClick={() =>\n            accountManager.connect().then((account) => {\n              if (!account) {\n                toast.error(\n                  `Wrong network: Please select Matic/Polygon network first`\n                );\n              } else {\n                setAccount(account);\n                accountManager.getMaticBalance().then((balance) => {\n                  setBalance(balance);\n                });\n              }\n            })\n          }\n        />\n      </div>\n      <div className=\"App-banner\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"App-title\">DogeCorn Farm</p>\n      </div>\n      <header className=\"App-header\">\n        <Launchpad pools={accountManager.pools}></Launchpad>\n        <AppExplanations></AppExplanations>\n        <div className=\"App-footer\">\n          <p>\n            A modest Web App built by{\" \"}\n            <a\n              href=\"https://github.com/TamtamHero\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              TamtamHero\n            </a>{\" \"}\n            with React, hosted on Github. v{`${packageJson.version}`}.{\" \"}\n            <a href=\"https://github.com/TamtamHero/dogecorn.farm/\">\n              PRs welcomed and appreciated ✨\n            </a>\n          </p>\n          <p>\n            Ethereum/Polygon donation:{\" \"}\n            <a\n              h\n              href=\"https://explorer-mainnet.maticvigil.com/address/0x97d5CeBb87cBeB641c0C17C2d4d29339CDCF91D2/transactions\"\n              target=\"_blanc\"\n              rel=\"noopener noreferrer\"\n            >\n              0x97d5CeBb87cBeB641c0C17C2d4d29339CDCF91D2\n            </a>\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}