{"version":3,"sources":["logo.svg","dogecorn-field.png","LoadButton/index.js","helpers.js","StakeMenu/index.js","StakeCard/index.js","LaunchPad/index.js","doge-logo.svg","StatusBar/index.js","AppExplanations/index.js","Configs.js","controller/accountManager.js","AnimatedWave.js","App.js","index.js"],"names":["LoadButton","text","loadingText","disabled","hidden","onClick","useState","isLoading","setLoading","opacity","setOpacity","onTriggerRun","useCallback","then","useEffect","className","onMouseEnter","onMouseLeave","style","display","cursor","getFormattedBalance","balance","ticker","decimals","truncate","balance_BN","BN","decimals_BN","unit_BN","pow","before_comma","div","toString","after_comma","mod","padStart","slice","length","StakeMenu","accountManager","pool","onUpdate","deposable","setDeposable","withdrawable","setWithdrawable","harvestable","setHarvestable","isZero","deposited","harvest","connected","a","deposit","pid","withdraw","StakeCard","allowance","setAllowance","incentive","title","description","setTokenAllowance","tokenAddress","network","Launchpad","pools","activeTab","setActiveTab","earn","map","farm","StatusBar","account","maticBalance","dogeBalance","accountAddr","setAccountAddr","src","logo","alt","polygonLogo","AppExplanations","expandedItems","setexpandedItems","allowZeroExpanded","allowMultipleExpanded","onChange","update","newExpandedItemUUID","itemButtonBottom","document","getElementById","getBoundingClientRect","bottom","window","innerHeight","scrollBy","children","token","testnet","local","infuraId","mainnet","dogecorn_addr","AccountManager","this","busy","web3Provider","web3","networkId","accounts","dogecorn","elon","providerOptions","walletconnect","package","WalletConnectProvider","options","web3Modal","Web3Modal","cacheProvider","connect","request","method","params","console","error","Web3","eth","net","getId","log","deployedNetwork","Dogecorn","networks","Contract","abi","address","Elon","refreshPools","Promise","all","getTokenBalance","String","getDepositedTokenBalance","getTokenAllowance","getHarvestableBalance","tvl","max256","contract","IERC20","methods","approve","send","from","spender","call","getBalance","balanceOf","getDepositedBalance","pendingDogecorn","harverstableBalance","amount","AnimatedWave","height","color","width","fill","d","repeatCount","attributeName","dur","values","config","set","configuration","App","setAccount","setMaticBalance","setDogeBalance","setPools","updatePools","resolve","data","hideProgressBar","position","getMaticBalance","toast","dogecorn_logo","href","target","rel","packageJson","version","h","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30085b52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.57d8ffc7.svg\";","export default __webpack_public_path__ + \"static/media/dogecorn-field.dc70c259.png\";","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./index.css\";\n\nfunction LoadButton({ text, loadingText, disabled, hidden, onClick }) {\n  const [isLoading, setLoading] = useState(false);\n  const [opacity, setOpacity] = useState(1);\n\n  const onTriggerRun = useCallback(() => {\n    setLoading(true);\n    onClick().then(() => {\n      setLoading(false);\n    });\n  }, [onClick]);\n\n  useEffect(() => {\n    setOpacity(isLoading | disabled ? 0.5 : 1);\n  }, [isLoading, disabled]);\n\n  return (\n    <div\n      className=\"load-button\"\n      disabled={isLoading | disabled}\n      onMouseEnter={() => !disabled && setOpacity(0.8)}\n      onMouseLeave={() => !disabled && setOpacity(1)}\n      style={{\n        display: hidden ? \"none\" : true,\n        opacity: disabled | isLoading ? 0.5 : 1,\n        cursor: disabled ? \"default\" : \"pointer\",\n      }}\n    >\n      <div\n        className=\"button-background\"\n        style={{\n          opacity: opacity,\n        }}\n      ></div>\n      <div\n        className=\"button-text\"\n        onClick={isLoading | disabled ? null : onTriggerRun}\n      >\n        {isLoading ? loadingText || \"Loading…\" : text}\n      </div>\n    </div>\n  );\n}\n\nexport default LoadButton;\n","import { BN } from \"bn.js\";\n\nfunction getFormattedBalance(\n  balance,\n  ticker = \"\",\n  decimals = 18,\n  truncate = 4\n) {\n  let balance_BN = new BN(balance, 10);\n  let decimals_BN = new BN(decimals, 10);\n  let unit_BN = new BN(10, 10).pow(decimals_BN);\n  let before_comma = balance_BN.div(unit_BN).toString();\n  let after_comma = balance_BN.mod(unit_BN).toString();\n  after_comma = after_comma.padStart(decimals, \"0\");\n  after_comma = truncate ? after_comma.slice(0, truncate) : after_comma;\n  return before_comma + \".\" + after_comma + (ticker.length ? \" \" + ticker : \"\");\n}\n\nexport { getFormattedBalance };\n","import React, { useState, useEffect } from \"react\";\nimport AmountInputField from \"../AmountInputField\";\nimport LoadButton from \"../LoadButton\";\nimport { BN } from \"bn.js\";\nimport { getFormattedBalance } from \"../helpers.js\";\nimport \"./index.css\";\n\nfunction StakeMenu({ accountManager, pool, onUpdate }) {\n  const [deposable, setDeposable] = useState(false);\n  const [withdrawable, setWithdrawable] = useState(false);\n  const [harvestable, setHarvestable] = useState(false);\n\n  useEffect(() => {\n    if (pool.balance) {\n      const balance_BN = new BN(pool.balance, 10);\n      if (!balance_BN.isZero()) {\n        setDeposable(true);\n      }\n    }\n    if (pool.deposited) {\n      const deposited_BN = new BN(pool.deposited, 10);\n      if (!deposited_BN.isZero()) {\n        setWithdrawable(true);\n      }\n    }\n    if (pool.harvest) {\n      const harvest_BN = new BN(pool.harvest, 10);\n      if (!harvest_BN.isZero()) {\n        setHarvestable(true);\n      }\n    }\n  }, [pool]);\n\n  return (\n    <div className=\"stake-menu\">\n      <div className=\"balance\">\n        Available: {getFormattedBalance(pool.balance)}\n        <br></br>\n        Deposited: {getFormattedBalance(pool.deposited)}\n      </div>\n      <div className=\"action-buttons\">\n        <LoadButton\n          text=\"Deposit\"\n          loadingText=\"Deposing...\"\n          disabled={!accountManager.connected || !deposable}\n          onClick={async () => {\n            await accountManager.deposit(pool.pid, pool.balance);\n            onUpdate();\n          }}\n        ></LoadButton>\n        <LoadButton\n          text=\"Withdraw\"\n          loadingText=\"Withdrawing...\"\n          disabled={!accountManager.connected || !withdrawable}\n          onClick={async () => {\n            await accountManager.withdraw(pool.pid, pool.deposited);\n            onUpdate();\n          }}\n        ></LoadButton>\n        <LoadButton\n          text=\"Harvest\"\n          loadingText=\"Harvesting...\"\n          disabled={!accountManager.connected || !harvestable}\n          onClick={async () => {\n            await accountManager.harvest(pool.pid);\n            onUpdate();\n          }}\n        ></LoadButton>\n      </div>\n    </div>\n    //   {/* // <AmountInputField pool={pool}></AmountInputField> */}\n  );\n}\n\nexport default StakeMenu;\n","import React, { useState, useEffect } from \"react\";\nimport StakeMenu from \"../StakeMenu\";\nimport LoadButton from \"../LoadButton\";\nimport { BN } from \"bn.js\";\nimport { getFormattedBalance } from \"../helpers.js\";\nimport \"./index.css\";\n\nfunction StakeCard({ accountManager, pool, onUpdate }) {\n  const [allowance, setAllowance] = useState(0);\n\n  useEffect(() => {\n    if (pool.allowance) {\n      const allowance_BN = new BN(pool.allowance, 10);\n      if (!allowance_BN.isZero()) {\n        setAllowance(pool.allowance);\n      }\n    }\n  }, [pool.allowance]);\n\n  return (\n    <div\n      className={\n        pool.incentive ? \"card-border--rainbow\" : \"card-border--normal\"\n      }\n    >\n      <div className=\"card\">\n        <div className=\"title\">{pool.title}</div>\n        <div className=\"description\">\n          {\n            <>\n              {pool.description}\n              <br></br>\n              {\"APY: 1456%\"}\n            </>\n          }\n        </div>\n        {allowance ? (\n          <StakeMenu\n            accountManager={accountManager}\n            pool={pool}\n            onUpdate={onUpdate}\n          ></StakeMenu>\n        ) : (\n          <div className=\"approval-button\">\n            <LoadButton\n              text={\n                accountManager.connected ? \"Allow Deposit\" : \"Not Connected\"\n              }\n              loadingText=\"Allowing...\"\n              disabled={!accountManager.connected}\n              onClick={async () => {\n                await accountManager.setTokenAllowance(\n                  pool.tokenAddress[accountManager.network]\n                );\n                onUpdate();\n              }}\n            ></LoadButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StakeCard;\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport StakeCard from \"../StakeCard\";\n\nfunction Launchpad({ accountManager, pools, onUpdate }) {\n  const [activeTab, setActiveTab] = useState(0);\n\n  return (\n    <div className=\"PadWrapper\">\n      <div className=\"tabs\">\n        <div\n          onClick={() => setActiveTab(0)}\n          className={`tab ${activeTab === 0 ? \"active\" : \"\"}`}\n        >\n          {\"EARN\"}\n        </div>\n        <div\n          onClick={() => setActiveTab(1)}\n          className={`tab ${activeTab === 1 ? \"active\" : \"\"}`}\n        >\n          {\"FARM\"}\n        </div>\n      </div>\n      {activeTab === 0 ? (\n        <div className=\"Pad\">\n          <div>\n            <div className=\"cardholder\">\n              {pools.earn.map((pool) => (\n                <StakeCard\n                  key={pool.title}\n                  accountManager={accountManager}\n                  pool={pool}\n                  onUpdate={onUpdate}\n                ></StakeCard>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"Pad\">\n          <div>\n            <div className=\"cardholder\">\n              {pools.farm.map((pool) => (\n                <StakeCard\n                  key={pool.title}\n                  accountManager={accountManager}\n                  pool={pool}\n                ></StakeCard>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Launchpad;\n","export default __webpack_public_path__ + \"static/media/doge-logo.85bd3441.svg\";","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./index.css\";\nimport { getFormattedBalance } from \"../helpers.js\";\nimport logo from \"../doge-logo.svg\";\nimport polygonLogo from \"../logo.svg\";\n\nfunction StatusBar({ account, maticBalance, dogeBalance, onClick }) {\n  const [isLoading, setLoading] = useState(false);\n  const [accountAddr, setAccountAddr] = useState(\"\");\n\n  const onTriggerRun = useCallback(() => {\n    if (account === \"Not connected\") {\n      setLoading(true);\n      onClick().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [onClick, account]);\n\n  useEffect(() => {\n    if (account !== \"Not connected\") {\n      setAccountAddr(\n        account[0].slice(0, 4) +\n          \"...\" +\n          account[0].slice(account[0].length - 4, account[0].length)\n      );\n    }\n  }, [account]);\n\n  return (\n    <div className=\"status-bar-wrapper\">\n      <div className=\"doge-balance\" hidden={!dogeBalance}>\n        <img src={logo} className=\"logo\" alt=\"doge-logo\" />\n        <div className=\"amount\">{getFormattedBalance(dogeBalance)}</div>\n      </div>\n      <div className=\"polygon-status\">\n        <div className=\"polygon-balance\" hidden={!maticBalance}>\n          <img src={polygonLogo} className=\"logo\" alt=\"polygon-logo\" />\n          <div className=\"amount\">{getFormattedBalance(maticBalance)}</div>\n        </div>\n        <button\n          className=\"connect-button\"\n          disabled={isLoading | (accountAddr !== \"\")}\n          onClick={isLoading ? null : onTriggerRun}\n          style={{\n            cursor: isLoading | (accountAddr !== \"\") ? \"default\" : \"pointer\",\n          }}\n        >\n          <div className=\"connect-button-content\">\n            {accountAddr\n              ? accountAddr\n              : isLoading\n              ? \"Loading…\"\n              : \"Connect wallet\"}\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default StatusBar;\n","import React, { useState } from \"react\";\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./index.css\";\n\nexport default function AppExplanations() {\n  const [expandedItems, setexpandedItems] = useState([]);\n\n  // In case the user expands a node that is barely visible, we scroll the page to display it fully\n  function handleExpand(update) {\n    if (update.length > expandedItems.length) {\n      const newExpandedItemUUID = update[update.length - 1];\n      const itemButtonBottom = document\n        .getElementById(`accordion__panel-${newExpandedItemUUID}`)\n        .getBoundingClientRect().bottom;\n      if (itemButtonBottom > window.innerHeight) {\n        window.scrollBy(0, itemButtonBottom - window.innerHeight);\n      }\n    }\n    setexpandedItems(update);\n  }\n\n  const lorem_help =\n    // eslint-disable-next-line\n    \"Lorem \\n\\\n    Ipsum\";\n\n  return (\n    <Accordion allowZeroExpanded allowMultipleExpanded onChange={handleExpand}>\n      <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>Lorem ipsum</AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={lorem_help}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","export const pools = {\n  earn: [\n    {\n      title: \"STAKING\",\n      description: \"🌽 STAKE DOGECORN 🌽\",\n      token: \"DOGECORN\",\n      tokenAddress: {\n        testnet: \"0x7bC80c08D45F0C88e42912C55D5377D4968F8EFA\",\n        local: \"0xAc4fa9Dfa287226338c43C5dE70B1C747d12da0B\",\n      },\n      decimals: 18,\n      pid: 0,\n    },\n    {\n      title: \"LIQUIDITY MINING\",\n      description: \"🍣 DOGECORN-MATIC LP 🍣\",\n      token: \"DOGECORN-MATIC\",\n      tokenAddress: {\n        testnet: \"0x7bC80c08D45F0C88e42912C55D5377D4968F8EFA\",\n        local: \"0x1765dE620C8F331fCF08d731e5A552DC8F829b5A\",\n      },\n      incentive: \"true\",\n      decimals: 18,\n      pid: 0,\n    },\n  ],\n  farm: [],\n};\n\nexport const infuraId = {\n  testnet:\n    \"https://polygon-mumbai.infura.io/v3/fa6996670db3490880cd7210fbe474c2\",\n  mainnet:\n    \"https://polygon-mumbai.infura.io/v3/fa6996670db3490880cd7210fbe474c2\",\n  local: \"http://127.0.0.1:7545\",\n};\n\nexport const network = \"local\";\n\nexport const dogecorn_addr = pools.earn[0].tokenAddress[network];\n","import Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Dogecorn from \"../contracts/Dogecorn.json\";\nimport Elon from \"../contracts/Elon.json\";\nimport IERC20 from \"../contracts/IERC20.json\";\nimport { network, pools, infuraId } from \"../Configs\";\nimport BN from \"bn.js\";\n\nconst MATIC_NETWORK = 80001;\n\nclass AccountManager {\n  constructor() {\n    this.connected = false;\n    this.busy = false;\n    this.web3Provider = null;\n    this.web3 = null;\n    this.balance = 0;\n    this.network = network;\n    this.networkId = 0;\n    this.accounts = null;\n    this.dogecorn = null;\n    this.elon = null;\n    this.pools = pools;\n  }\n\n  async connect() {\n    if (!this.connected) {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider, // required\n          options: {\n            infuraId: infuraId[network],\n          },\n        },\n      };\n\n      const web3Modal = new Web3Modal({\n        // network: \"mainnet\", // optional\n        cacheProvider: true, // optional\n        providerOptions, // required\n      });\n\n      this.web3Provider = await web3Modal.connect();\n      try {\n        // Request account access\n        this.accounts = await this.web3Provider.request({\n          method: \"eth_requestAccounts\",\n          params: [],\n        });\n      } catch (error) {\n        // User denied account access...\n        console.error(`User denied account access: ${error}`);\n      }\n      this.web3 = new Web3(this.web3Provider);\n      this.networkId = await this.web3.eth.net.getId();\n      if (this.networkId === MATIC_NETWORK) {\n        this.connected = true;\n        console.log(`connected: ${this.accounts} ${typeof this.accounts}`);\n\n        // Get the contract instance.\n        const deployedNetwork = Dogecorn.networks[this.networkId];\n        this.dogecorn = new this.web3.eth.Contract(\n          Dogecorn.abi,\n          deployedNetwork && deployedNetwork.address\n        );\n        this.elon = new this.web3.eth.Contract(\n          Elon.abi,\n          deployedNetwork && Elon.networks[this.networkId].address\n        );\n        await this.refreshPools();\n        return this.accounts;\n      }\n    }\n  }\n\n  async refreshPools() {\n    this.pools = {\n      ...this.pools,\n      earn: await Promise.all(\n        this.pools.earn.map(async (pool) => ({\n          ...pool,\n          balance: await this.getTokenBalance(\n            pool.tokenAddress[this.network],\n            String(this.accounts)\n          ),\n          tvl: await this.getTokenBalance(\n            pool.tokenAddress[this.network],\n            this.elon.options.address\n          ),\n          deposited: await this.getDepositedTokenBalance(pool.pid),\n          allowance: await this.getTokenAllowance(\n            pool.tokenAddress[this.network],\n            this.elon.options.address\n          ),\n          harvest: await this.getHarvestableBalance(pool.pid),\n        }))\n      ),\n    };\n    console.log(this.pools.earn);\n    return this.pools;\n  }\n\n  async setTokenAllowance(tokenAddress) {\n    const max256 = new BN(\n      \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\n      \"hex\"\n    );\n    const contract = new this.web3.eth.Contract(IERC20.abi, tokenAddress);\n    await contract.methods\n      .approve(this.elon.options.address, max256)\n      .send({ from: this.accounts[0] });\n    return true;\n  }\n\n  async getTokenAllowance(tokenAddress, spender) {\n    const contract = new this.web3.eth.Contract(IERC20.abi, tokenAddress);\n    const allowance = await contract.methods\n      .allowance(String(this.accounts), spender)\n      .call();\n    return allowance;\n  }\n\n  async getMaticBalance() {\n    this.balance = await this.web3.eth.getBalance(String(this.accounts));\n    return this.balance;\n  }\n\n  async getTokenBalance(address, account) {\n    const contract = new this.web3.eth.Contract(IERC20.abi, address);\n    const balance = await contract.methods.balanceOf(account).call();\n    return balance;\n  }\n\n  async getDepositedTokenBalance(pid) {\n    const balance = await this.elon.methods\n      .getDepositedBalance(pid, String(this.accounts))\n      .call();\n    console.log(balance);\n    return balance;\n  }\n\n  async getHarvestableBalance(pid) {\n    const harverstableBalance = await this.elon.methods\n      .pendingDogecorn(pid, String(this.accounts))\n      .call();\n    return harverstableBalance;\n  }\n\n  async deposit(pid, amount) {\n    return await this.elon.methods\n      .deposit(pid, amount)\n      .send({ from: String(this.accounts[0]) })\n      .then(async () => await this.refreshPools());\n  }\n\n  async harvest(pid) {\n    return await this.deposit(pid, 0);\n  }\n\n  async withdraw(pid, amount) {\n    return await this.elon.methods\n      .withdraw(pid, amount)\n      .send({ from: String(this.accounts[0]) });\n  }\n}\n\nexport default AccountManager;\n","// @flow\nimport React from \"react\";\n\nexport default function AnimatedWave({ height, color }) {\n  return (\n    <svg width=\"100%\" height={height} fill=\"none\">\n      <path\n        fill={color}\n        d=\"\n            M0 277\n            C 473,383\n              822,60\n              1920,216\n\n            V 0\n            H 0\n            V 0\n            Z;\"\n      >\n        <animate\n          repeatCount=\"indefinite\"\n          attributeName=\"d\"\n          dur=\"21s\"\n          values=\"\n            M0 277\n            C 473,383\n              822,60\n              1920,216\n\n            V 0\n            H 0\n            V 0\n            Z;\n\n            M0 277\n            C 473,060\n              1222,383\n              1920,236\n\n            V 0\n            H 0\n            V 0\n            Z;\n\n            M0 277\n            C 473,383\n              822,60\n              1920,216\n\n            V 0\n            H 0\n            V 0\n            Z;\n            \"\n        />\n      </path>\n    </svg>\n  );\n}\n","import logo from \"./logo.svg\";\nimport dogecorn_logo from \"./dogecorn-field.png\";\n// import dogecorn_logo from \"./dogecorn-heap.png\";\nimport \"./App.css\";\nimport packageJson from \"../package.json\";\nimport Launchpad from \"./LaunchPad\";\nimport StatusBar from \"./StatusBar\";\nimport AppExplanations from \"./AppExplanations\";\nimport AccountManager from \"./controller/accountManager\";\nimport React, { useState, useCallback } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport config from \"react-global-configuration\";\nimport configuration from \"./config.json\";\nimport AnimatedWave from \"./AnimatedWave.js\";\nimport { dogecorn_addr } from \"./Configs.js\";\nimport { getFormattedBalance } from \"./helpers.js\";\nconfig.set(configuration);\n\nconst accountManager = new AccountManager();\n\nfunction App() {\n  const [account, setAccount] = useState(\"Not connected\");\n  const [maticBalance, setMaticBalance] = useState(0);\n  const [dogeBalance, setDogeBalance] = useState(0);\n  const [pools, setPools] = useState(accountManager.pools);\n\n  const updatePools = useCallback(() => {\n    return new Promise(async (resolve) => {\n      let data = await accountManager.refreshPools();\n      setPools(data);\n      resolve();\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ToastContainer hideProgressBar={true} position=\"top-left\" />\n      <div className=\"wave\">\n        <AnimatedWave height={1000} color=\"#8288D4\" />\n      </div>\n      <div className=\"Connect-button\">\n        <StatusBar\n          account={account}\n          maticBalance={maticBalance}\n          dogeBalance={dogeBalance}\n          onClick={() =>\n            accountManager.connect().then((account) => {\n              if (!account) {\n                toast.error(\n                  `Wrong network: Please select Matic/Polygon network first`\n                );\n              } else {\n                setAccount(account);\n                accountManager.getMaticBalance().then((balance) => {\n                  setMaticBalance(balance);\n                });\n                accountManager\n                  .getTokenBalance(dogecorn_addr, String(account))\n                  .then((balance) => {\n                    setDogeBalance(balance);\n                  });\n              }\n              updatePools();\n            })\n          }\n        />\n      </div>\n      <div className=\"App-banner\">\n        <img src={dogecorn_logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"App-title\">DogeCorn</p>\n      </div>\n      <header className=\"App-header\">\n        <Launchpad\n          accountManager={accountManager}\n          pools={pools}\n          onUpdate={updatePools}\n        ></Launchpad>\n        <AppExplanations></AppExplanations>\n        <div className=\"App-footer\">\n          <p>\n            A modest Web App built by{\" \"}\n            <a\n              href=\"https://github.com/TamtamHero\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              TamtamHero\n            </a>{\" \"}\n            with React, hosted on Github. v{`${packageJson.version}`}.{\" \"}\n            <a href=\"https://github.com/TamtamHero/dogecorn.farm/\">\n              PRs welcomed and appreciated ✨\n            </a>\n          </p>\n          <p>\n            Ethereum/Polygon donation:{\" \"}\n            <a\n              h\n              href=\"https://explorer-mainnet.maticvigil.com/address/0x97d5CeBb87cBeB641c0C17C2d4d29339CDCF91D2/transactions\"\n              target=\"_blanc\"\n              rel=\"noopener noreferrer\"\n            >\n              0x97d5CeBb87cBeB641c0C17C2d4d29339CDCF91D2\n            </a>\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}