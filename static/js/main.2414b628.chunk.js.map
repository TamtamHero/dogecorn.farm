{"version":3,"sources":["logo.svg","AmountInputField/index.js","LoadButton/index.js","helpers.js","StakeCard/index.js","LaunchPad/index.js","doge-logo.svg","StatusBar/index.js","AppExplanations/index.js","Configs.js","controller/accountManager.js","AnimatedWave.js","App.js","reportWebVitals.js","index.js"],"names":["AmountInputField","pool","useState","amount","setAmount","className","value","onChange","event","input","target","replace","length","amount_wei","Decimal","mul","pow","decimals","amount_BN","BN","toFixed","balance_BN","balance","lte","console","log","onSelect","onBlur","onClick","max","div","LoadButton","text","loadingText","disabled","hidden","isLoading","setLoading","opacity","setOpacity","onTriggerRun","useCallback","then","useEffect","onMouseEnter","onMouseLeave","style","display","getFormattedBalance","ticker","truncate","decimals_BN","unit_BN","before_comma","toString","after_comma","mod","padStart","slice","StakeCard","accountManager","allowance","setAllowance","isZero","incentive","title","description","connected","setTokenAllowance","tokenAddress","Launchpad","pools","activeTab","setActiveTab","earn","map","farm","StatusBar","account","maticBalance","dogeBalance","accountAddr","setAccountAddr","src","logo","alt","polygonLogo","AppExplanations","expandedItems","setexpandedItems","allowZeroExpanded","allowMultipleExpanded","update","newExpandedItemUUID","itemButtonBottom","document","getElementById","getBoundingClientRect","bottom","window","innerHeight","scrollBy","children","token","infuraId","testnet","mainnet","dogecorn_addr","AccountManager","this","busy","web3Provider","web3","network","accounts","dogecorn","elon","a","providerOptions","walletconnect","package","WalletConnectProvider","options","web3Modal","Web3Modal","cacheProvider","connect","request","method","params","error","Web3","eth","net","getId","deployedNetwork","Dogecorn","networks","Contract","abi","address","Elon","refreshPools","getBalances","getTokenAllowances","max256","contract","IERC20","methods","approve","send","from","Promise","all","getTokenAllowance","spender","String","call","getTokenBalance","deposited","getBalance","balanceOf","AnimatedWave","height","color","width","fill","d","repeatCount","attributeName","dur","values","config","set","configuration","App","setAccount","setMaticBalance","setDogeBalance","hideProgressBar","position","getMaticBalance","toast","href","rel","packageJson","version","h","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2414b628.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.57d8ffc7.svg\";","import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { BN } from \"bn.js\";\nimport { Decimal } from \"decimal.js\";\n\nfunction AmountInputField({ pool }) {\n  const [amount, setAmount] = useState(\"0\");\n\n  const onChange = (event) => {\n    let input = event.target.value.replace(/[^\\d.]/g, \"\");\n    if (input.length) {\n      const amount_wei = new Decimal(input).mul(\n        new Decimal(10).pow(pool.decimals)\n      );\n      const amount_BN = new BN(amount_wei.toFixed(0), 10);\n      const balance_BN = new BN(pool.balance, 10);\n\n      if (amount_BN.lte(balance_BN)) {\n        setAmount(input);\n      } else {\n        console.log(\"Not enough funds.\");\n      }\n    } else {\n      setAmount(\"\");\n    }\n  };\n\n  const setMax = () => {\n    const max = new Decimal(pool.balance).div(\n      new Decimal(10).pow(pool.decimals)\n    );\n    setAmount(max.toFixed(pool.decimals));\n  };\n\n  const onSelect = () => {\n    if (amount === \"0\") {\n      setAmount(\"\");\n    }\n  };\n\n  const onBlur = () => {\n    if (amount === \"\") {\n      setAmount(\"0\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"amount-field-wrapper\">\n        <input\n          value={amount}\n          onChange={onChange}\n          onSelect={onSelect}\n          onBlur={onBlur}\n        />\n        <div className=\"max-button\" onClick={setMax}>\n          <span>Max</span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AmountInputField;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./index.css\";\n\nfunction LoadButton({ text, loadingText, disabled, hidden, onClick }) {\n  const [isLoading, setLoading] = useState(false);\n  const [opacity, setOpacity] = useState(1);\n\n  const onTriggerRun = useCallback(() => {\n    setLoading(true);\n    onClick().then(() => {\n      setLoading(false);\n    });\n  }, [onClick]);\n\n  useEffect(() => {\n    setOpacity(isLoading | disabled ? 0.5 : 1);\n  }, [isLoading, disabled]);\n\n  return (\n    <div\n      className=\"load-button\"\n      disabled={isLoading | disabled}\n      onMouseEnter={() => !disabled && setOpacity(0.8)}\n      onMouseLeave={() => !disabled && setOpacity(1)}\n      style={{\n        display: hidden ? \"none\" : true,\n        opacity: disabled | isLoading ? 0.5 : 1,\n      }}\n    >\n      <div\n        className=\"button-background\"\n        style={{\n          opacity: opacity,\n        }}\n      ></div>\n      <div className=\"button-text\" onClick={isLoading ? null : onTriggerRun}>\n        {isLoading ? loadingText || \"Loading…\" : text}\n      </div>\n    </div>\n  );\n}\n\nexport default LoadButton;\n","import { BN } from \"bn.js\";\n\nfunction getFormattedBalance(\n  balance,\n  ticker = \"\",\n  decimals = 18,\n  truncate = 4\n) {\n  let balance_BN = new BN(balance, 10);\n  let decimals_BN = new BN(decimals, 10);\n  let unit_BN = new BN(10, 10).pow(decimals_BN);\n  let before_comma = balance_BN.div(unit_BN).toString();\n  let after_comma = balance_BN.mod(unit_BN).toString();\n  after_comma = after_comma.padStart(decimals, \"0\");\n  after_comma = truncate ? after_comma.slice(0, truncate) : after_comma;\n  return before_comma + \".\" + after_comma + (ticker.length ? \" \" + ticker : \"\");\n}\n\nexport { getFormattedBalance };\n","import React, { useState, useEffect } from \"react\";\nimport AmountInputField from \"../AmountInputField\";\nimport LoadButton from \"../LoadButton\";\nimport { BN } from \"bn.js\";\nimport { getFormattedBalance } from \"../helpers.js\";\nimport \"./index.css\";\n\nfunction StakeCard({ accountManager, pool }) {\n  const [allowance, setAllowance] = useState(0);\n\n  useEffect(() => {\n    if (pool.allowance) {\n      const allowance_BN = new BN(pool.allowance, 10);\n      if (!allowance_BN.isZero()) {\n        setAllowance(pool.allowance);\n      }\n    }\n  }, [pool.allowance]);\n\n  return (\n    <div\n      className={\n        pool.incentive ? \"card-border--rainbow\" : \"card-border--normal\"\n      }\n    >\n      <div className=\"card\">\n        <div className=\"title\">{pool.title}</div>\n        <div className=\"description\">\n          {\n            <>\n              <p>{pool.description}</p>\n              <p>{\"APY: 1456%\"}</p>\n            </>\n          }\n        </div>\n        <div className=\"balance\">\n          Available: {getFormattedBalance(pool.balance)}\n        </div>\n        {allowance ? (\n          // <StakeMenu pool={pool}></StakeMenu>\n          <AmountInputField pool={pool}></AmountInputField>\n        ) : (\n          <div className=\"approval-button\">\n            <LoadButton\n              text=\"Allow Deposit\"\n              loadingText=\"Allowing...\"\n              disabled={!accountManager.connected}\n              onClick={() =>\n                accountManager.setTokenAllowance(pool.tokenAddress)\n              }\n            ></LoadButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StakeCard;\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport StakeCard from \"../StakeCard\";\n\nfunction Launchpad({ accountManager, pools }) {\n  const [activeTab, setActiveTab] = useState(0);\n\n  return (\n    <div className=\"PadWrapper\">\n      <div className=\"tabs\">\n        <div\n          onClick={() => setActiveTab(0)}\n          className={`tab ${activeTab === 0 ? \"active\" : \"\"}`}\n        >\n          {\"EARN\"}\n        </div>\n        <div\n          onClick={() => setActiveTab(1)}\n          className={`tab ${activeTab === 1 ? \"active\" : \"\"}`}\n        >\n          {\"FARM\"}\n        </div>\n      </div>\n      {activeTab === 0 ? (\n        <div className=\"Pad\">\n          <div>\n            <div className=\"cardholder\">\n              {pools.earn.map((pool) => (\n                <StakeCard\n                  key={pool.title}\n                  accountManager={accountManager}\n                  pool={pool}\n                ></StakeCard>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"Pad\">\n          <div>\n            <div className=\"cardholder\">\n              {pools.farm.map((pool) => (\n                <StakeCard\n                  key={pool.title}\n                  accountManager={accountManager}\n                  pool={pool}\n                ></StakeCard>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Launchpad;\n","export default __webpack_public_path__ + \"static/media/doge-logo.85bd3441.svg\";","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./index.css\";\nimport { getFormattedBalance } from \"../helpers.js\";\nimport logo from \"../doge-logo.svg\";\nimport polygonLogo from \"../logo.svg\";\n\nfunction StatusBar({ account, maticBalance, dogeBalance, onClick }) {\n  const [isLoading, setLoading] = useState(false);\n  const [accountAddr, setAccountAddr] = useState(\"\");\n\n  const onTriggerRun = useCallback(() => {\n    if (account === \"Not connected\") {\n      setLoading(true);\n      onClick().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [onClick, account]);\n\n  useEffect(() => {\n    if (account !== \"Not connected\") {\n      setAccountAddr(\n        account[0].slice(0, 4) +\n          \"...\" +\n          account[0].slice(account[0].length - 4, account[0].length)\n      );\n    }\n  }, [account]);\n\n  return (\n    <div className=\"status-bar-wrapper\">\n      <div className=\"doge-balance\" hidden={!dogeBalance}>\n        <img src={logo} className=\"logo\" alt=\"doge-logo\" />\n        <div className=\"amount\">{getFormattedBalance(dogeBalance)}</div>\n      </div>\n      <div className=\"polygon-status\">\n        <div className=\"polygon-balance\" hidden={!maticBalance}>\n          <img src={polygonLogo} className=\"logo\" alt=\"polygon-logo\" />\n          <div className=\"amount\">{getFormattedBalance(maticBalance)}</div>\n        </div>\n        <button\n          className=\"connect-button\"\n          disabled={isLoading | (accountAddr !== \"\")}\n          onClick={isLoading ? null : onTriggerRun}\n        >\n          <div className=\"connect-button-content\">\n            {accountAddr\n              ? accountAddr\n              : isLoading\n              ? \"Loading…\"\n              : \"Connect wallet\"}\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default StatusBar;\n","import React, { useState } from \"react\";\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./index.css\";\n\nexport default function AppExplanations() {\n  const [expandedItems, setexpandedItems] = useState([]);\n\n  // In case the user expands a node that is barely visible, we scroll the page to display it fully\n  function handleExpand(update) {\n    if (update.length > expandedItems.length) {\n      const newExpandedItemUUID = update[update.length - 1];\n      const itemButtonBottom = document\n        .getElementById(`accordion__panel-${newExpandedItemUUID}`)\n        .getBoundingClientRect().bottom;\n      if (itemButtonBottom > window.innerHeight) {\n        window.scrollBy(0, itemButtonBottom - window.innerHeight);\n      }\n    }\n    setexpandedItems(update);\n  }\n\n  const lorem_help =\n    // eslint-disable-next-line\n    \"Lorem \\n\\\n    Ipsum\";\n\n  return (\n    <Accordion allowZeroExpanded allowMultipleExpanded onChange={handleExpand}>\n      <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>Lorem ipsum</AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={lorem_help}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","export const pools = {\n  earn: [\n    {\n      title: \"LIQUIDITY MINING\",\n      description: \"DOGECORN-MATIC LP\",\n      token: \"DOGECORN-MATIC\",\n      tokenAddress: \"0x326C977E6efc84E512bB9C30f76E30c160eD06FB\",\n      incentive: \"true\",\n      decimals: 18,\n    },\n    {\n      title: \"STAKING\",\n      description: \"STAKE DOGECORN\",\n      token: \"DOGECORN\",\n      tokenAddress: \"0x7bC80c08D45F0C88e42912C55D5377D4968F8EFA\",\n      decimals: 18,\n    },\n  ],\n  farm: [],\n};\n\nexport const infuraId = {\n  testnet:\n    \"https://polygon-mumbai.infura.io/v3/fa6996670db3490880cd7210fbe474c2\",\n  mainnet:\n    \"https://polygon-mumbai.infura.io/v3/fa6996670db3490880cd7210fbe474c2\",\n};\n\nexport const dogecorn_addr = pools.earn[1].tokenAddress;\n\nexport const network = \"mainnet\";\n","import Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Dogecorn from \"../contracts/Dogecorn.json\";\nimport Elon from \"../contracts/Elon.json\";\nimport IERC20 from \"../contracts/IERC20.json\";\nimport { network, pools, infuraId } from \"../Configs\";\nimport BN from \"bn.js\";\n\nconst MATIC_NETWORK = 80001;\n\nclass AccountManager {\n  constructor() {\n    this.connected = false;\n    this.busy = false;\n    this.web3Provider = null;\n    this.web3 = null;\n    this.balance = 0;\n    this.network = 0;\n    this.accounts = null;\n    this.dogecorn = null;\n    this.elon = null;\n    this.pools = pools;\n  }\n\n  async connect() {\n    if (!this.connected) {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider, // required\n          options: {\n            infuraId: infuraId[network],\n          },\n        },\n      };\n\n      const web3Modal = new Web3Modal({\n        // network: \"mainnet\", // optional\n        cacheProvider: true, // optional\n        providerOptions, // required\n      });\n\n      this.web3Provider = await web3Modal.connect();\n      try {\n        // Request account access\n        this.accounts = await this.web3Provider.request({\n          method: \"eth_requestAccounts\",\n          params: [],\n        });\n      } catch (error) {\n        // User denied account access...\n        console.error(`User denied account access: ${error}`);\n      }\n      this.web3 = new Web3(this.web3Provider);\n      this.network = await this.web3.eth.net.getId();\n      if (this.network === MATIC_NETWORK) {\n        this.connected = true;\n        console.log(`connected: ${this.accounts} ${typeof this.accounts}`);\n\n        // Get the contract instance.\n        const deployedNetwork = Dogecorn.networks[this.network];\n        this.dogecorn = new this.web3.eth.Contract(\n          Dogecorn.abi,\n          deployedNetwork && deployedNetwork.address\n        );\n        this.elon = new this.web3.eth.Contract(\n          Elon.abi,\n          deployedNetwork && Elon.networks[this.network].address\n        );\n        await this.refreshPools();\n        console.log(this.pools);\n        return this.accounts;\n      }\n    }\n  }\n\n  async refreshPools() {\n    await this.getBalances();\n    await this.getTokenAllowances();\n  }\n\n  async setTokenAllowance(tokenAddress) {\n    const max256 = new BN(\n      \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\n      \"hex\"\n    );\n    let contract = new this.web3.eth.Contract(IERC20.abi, tokenAddress);\n    await contract.methods\n      .approve(this.elon.options.address, max256)\n      .send({ from: this.accounts[0] });\n    return true;\n  }\n\n  async getTokenAllowances() {\n    this.pools.earn = await Promise.all(\n      this.pools.earn.map(async (pool) => ({\n        ...pool,\n        allowance: await this.getTokenAllowance(\n          pool.tokenAddress,\n          this.elon.options.address\n        ),\n      }))\n    );\n  }\n\n  async getTokenAllowance(tokenAddress, spender) {\n    let contract = new this.web3.eth.Contract(IERC20.abi, tokenAddress);\n    let allowance = await contract.methods\n      .allowance(String(this.accounts), spender)\n      .call();\n    return allowance;\n  }\n\n  async getBalances() {\n    this.pools.earn = await Promise.all(\n      this.pools.earn.map(async (pool) => ({\n        ...pool,\n        balance: await this.getTokenBalance(\n          pool.tokenAddress,\n          String(this.accounts)\n        ),\n        deposited: await this.getTokenBalance(\n          pool.tokenAddress,\n          this.elon.options.address\n        ),\n      }))\n    );\n  }\n\n  async getMaticBalance() {\n    this.balance = await this.web3.eth.getBalance(String(this.accounts));\n    return this.balance;\n  }\n\n  async getTokenBalance(address, account) {\n    let contract = new this.web3.eth.Contract(IERC20.abi, address);\n    let balance = await contract.methods.balanceOf(account).call();\n    return balance;\n  }\n}\n\nexport default AccountManager;\n","// @flow\nimport React from \"react\";\n\nexport default function AnimatedWave({ height, color }) {\n  return (\n    <svg width=\"100%\" height={height} fill=\"none\">\n      <path\n        fill={color}\n        d=\"\n            M0 277\n            C 473,383\n              822,60\n              1920,216\n\n            V 0\n            H 0\n            V 0\n            Z;\"\n      >\n        <animate\n          repeatCount=\"indefinite\"\n          attributeName=\"d\"\n          dur=\"21s\"\n          values=\"\n            M0 277\n            C 473,383\n              822,60\n              1920,216\n\n            V 0\n            H 0\n            V 0\n            Z;\n\n            M0 277\n            C 473,060\n              1222,383\n              1920,236\n\n            V 0\n            H 0\n            V 0\n            Z;\n\n            M0 277\n            C 473,383\n              822,60\n              1920,216\n\n            V 0\n            H 0\n            V 0\n            Z;\n            \"\n        />\n      </path>\n    </svg>\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport packageJson from \"../package.json\";\nimport Launchpad from \"./LaunchPad\";\nimport StatusBar from \"./StatusBar\";\nimport AppExplanations from \"./AppExplanations\";\nimport AccountManager from \"./controller/accountManager\";\nimport React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport config from \"react-global-configuration\";\nimport configuration from \"./config.json\";\nimport AnimatedWave from \"./AnimatedWave.js\";\nimport { dogecorn_addr } from \"./Configs.js\";\nimport { getFormattedBalance } from \"./helpers.js\";\n\nconfig.set(configuration);\n\nconst accountManager = new AccountManager();\n\nfunction App() {\n  const [account, setAccount] = useState(\"Not connected\");\n  const [maticBalance, setMaticBalance] = useState(0);\n  const [dogeBalance, setDogeBalance] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <ToastContainer hideProgressBar={true} position=\"top-left\" />\n      <div className=\"wave\">\n        <AnimatedWave height={1000} color=\"#824834\" />\n      </div>\n      <div className=\"Connect-button\">\n        <StatusBar\n          account={account}\n          maticBalance={maticBalance}\n          dogeBalance={dogeBalance}\n          onClick={() =>\n            accountManager.connect().then((account) => {\n              if (!account) {\n                toast.error(\n                  `Wrong network: Please select Matic/Polygon network first`\n                );\n              } else {\n                setAccount(account);\n                accountManager.getMaticBalance().then((balance) => {\n                  setMaticBalance(balance);\n                });\n                accountManager\n                  .getTokenBalance(dogecorn_addr, String(account))\n                  .then((balance) => {\n                    setDogeBalance(balance);\n                  });\n              }\n            })\n          }\n        />\n      </div>\n      <div className=\"App-banner\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"App-title\">DogeCorn Farm</p>\n      </div>\n      <header className=\"App-header\">\n        <Launchpad\n          accountManager={accountManager}\n          pools={accountManager.pools}\n        ></Launchpad>\n        <AppExplanations></AppExplanations>\n        <div className=\"App-footer\">\n          <p>\n            A modest Web App built by{\" \"}\n            <a\n              href=\"https://github.com/TamtamHero\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              TamtamHero\n            </a>{\" \"}\n            with React, hosted on Github. v{`${packageJson.version}`}.{\" \"}\n            <a href=\"https://github.com/TamtamHero/dogecorn.farm/\">\n              PRs welcomed and appreciated ✨\n            </a>\n          </p>\n          <p>\n            Ethereum/Polygon donation:{\" \"}\n            <a\n              h\n              href=\"https://explorer-mainnet.maticvigil.com/address/0x97d5CeBb87cBeB641c0C17C2d4d29339CDCF91D2/transactions\"\n              target=\"_blanc\"\n              rel=\"noopener noreferrer\"\n            >\n              0x97d5CeBb87cBeB641c0C17C2d4d29339CDCF91D2\n            </a>\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}